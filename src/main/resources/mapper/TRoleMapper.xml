<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.org.dianjiu.task.dao.TRoleDao">

    <resultMap type="cn.org.dianjiu.task.entity.TRole" id="TRoleResultMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="roleName" column="role_name" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="table_field">
      id, role_name      
    </sql>
       
    <!--通过Id查询单个对象-->
    <select id="getById" resultMap="TRoleResultMap" parameterType="java.lang.Integer">
        select
          <include refid="table_field" />
        from t_role
        where id = #{id,jdbcType=INTEGER}
    </select>


    <!--通过实体不为空的属性作为筛选条件查询对象列表-->
    <select id="listByEntity" resultMap="TRoleResultMap" parameterType="cn.org.dianjiu.task.entity.TRole">
        select
          <include refid="table_field" />
        from t_role
        <where>
            <if test="id != null">
                and id = #{id,jdbcType=INTEGER}
            </if>
            <if test="roleName != null">
                and role_name = #{roleName,jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <!--通过实体不为空的属性作为筛选条件查询单个对象-->
    <select id="getByEntity" resultMap="TRoleResultMap" parameterType="cn.org.dianjiu.task.entity.TRole">
        select
          <include refid="table_field" />
        from t_role
        <where>
            <if test="id != null">
                and id = #{id,jdbcType=INTEGER}
            </if>
            <if test="roleName != null">
                and role_name = #{roleName,jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <!--通过Id列表作为筛选条件查询对象列表，列表长度不为0-->
    <select id="listByIds" resultMap="TRoleResultMap" parameterType="list">
        select
          <include refid="table_field" />
        from t_role
        where id in
        <foreach item="item" collection="list" separator="," open="(" close=")" index="index">
            #{item}
        </foreach>
    </select>

    <!--新增实体属性不为null的记录-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true" parameterType="cn.org.dianjiu.task.entity.TRole">
        insert into t_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="id != null">
             id,
          </if>
          <if test="roleName != null">
             role_name,
          </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
          <if test="id != null">
             #{id,jdbcType=INTEGER},
          </if>
          <if test="roleName != null">
             #{roleName,jdbcType=VARCHAR},
          </if>
        </trim>
    </insert>

    <!--批量新增所有列，列表长度不能为0，且列表id统一为null或者统一不为null-->
    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true" parameterType="list">
        insert into t_role
         (<if test="id != null">id,</if>role_name)
        values
        <foreach item="item" collection="list" separator="," open="" close="" index="index">
         (<if test="item.id != null">#{item.id,jdbcType=INTEGER},</if>#{item.roleName,jdbcType=VARCHAR})
        </foreach>
    </insert>

    <!--通过主键修改实体属性不为null的列-->
    <update id="update" parameterType="cn.org.dianjiu.task.entity.TRole">
        update t_role
        <set>
            <if test="roleName != null and roleName != ''">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!--通过表字段修改实体属性不为null的列-->
    <update id="updateByField">
        update t_role
        <set>
            <if test="where.roleName == null and set.roleName != null and set.roleName != ''">
                role_name = #{set.roleName,jdbcType=VARCHAR},
            </if>
        </set>
        <where>
            <if test="where.id != null">
                and id = #{where.id,jdbcType=INTEGER}
            </if>
            <if test="where.roleName != null">
                and role_name = #{where.roleName,jdbcType=VARCHAR}
            </if>
        </where>
    </update>

    <!--通过主键修改实体列表，列表长度不能为0，注意：当实体属性为null时，对应的列也会别更新为null-->
    <update id="updateBatch" parameterType="list">
        update t_role
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="role_name = case" suffix="end,">
                 <foreach collection="list" item="item" index="index">
                  when id = #{item.id} then #{item.roleName}
                 </foreach>
            </trim>
        </trim>
        where id in
        <foreach collection="list" index="index" item="item" separator="," open="(" close=")">
            #{item.id,jdbcType=INTEGER}
        </foreach>
    </update>
    
    <!--通过主键删除-->
    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from t_role where id = #{id,jdbcType=INTEGER}
    </delete>

    <!--通过实体非空属性删除-->
    <delete id="deleteByEntity" parameterType="cn.org.dianjiu.task.entity.TRole">
        delete from t_role
        <where>
            <if test="roleName != null">
                and role_name = #{roleName,jdbcType=VARCHAR}
            </if>
        </where>
    </delete>
    
    <!--通过主键列表删除，列表长度不能为0-->
    <delete id="deleteByIds" parameterType="list">
        delete from t_role where id in
        <foreach item="item" collection="list" separator="," open="(" close=")" index="index">
            #{item}
        </foreach>
    </delete>
    
    <select id="countAll" resultType="int">
        select count(id) from t_role
    </select>
    
    <select id="countByEntity" parameterType="cn.org.dianjiu.task.entity.TRole" resultType="int">
        select count(id) from t_role
        <where>
            <if test="id != null">
                and id = #{id,jdbcType=INTEGER}
            </if>
            <if test="roleName != null">
                and role_name = #{roleName,jdbcType=VARCHAR}
            </if>
        </where>
    </select>
</mapper>